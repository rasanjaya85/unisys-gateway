[docker]
  [docker.dockerConfig]
    enable = true
    name = "petstore"
    registry = 'registry.wso2.org'
    tag = '1.0.TARGET_VERSION'
    #buildImage = ''
    #dockerHost = ''
    #dockerCertPath = ''
    #baseImage = ''
    #enableDebug = ''
    #debugPort = ''
    push = 'true'
    #username = ''
    #password = ''
  [docker.dockerCopyFiles]
    enable = true
    [[docker.dockerCopyFiles.files]]
        source = '/home/vagrant/toolkit/resources/conf/micro-gw.conf'
        target = '/home/ballerina/conf/micro-gw.conf'
        isBallerinaConf = true
[kubernetes]
  [kubernetes.kubernetesDeployment]
    enable = false
    #name = ''
    #labels = ''
    #replicas = ''
    #enableLiveness = ''
    #initialDelaySeconds = ''
    #periodSeconds = ''
    #livenessPort = ''
    #imagePullPolicy = ''
    #image = ''
    #env = ''
    #buildImage = ''
    [kubernetes.kubernetesDeployment.copyFiles]
        enable = false
        [[kubernetes.kubernetesDeployment.copyFiles.files]]
            source = ''
            target = ''
    #dockerHost = ''
    #dockerCertPath = ''
    #push = ''
    #username = ''
    #password = ''
    #baseImage = ''
    #singleYAML = ''
  [kubernetes.kubernetesService]
    enable = false
    #name = ''
    #labels = ''
    #serviceType = ''
    #port = ''
  [kubernetes.kubernetesIngress]
    enable = false
    #name = ''
    #labels = ''
    #hostname = ''
    #annotations = ''
    #path = ''
    #targetPath = ''
    #ingressClass = ''
  [kubernetes.secureKubernetesIngress]
    enable = false
    #name = ''
    #labels = ''
    #hostname = ''
    #annotations = ''
    #path = ''
    #targetPath = ''
    #ingressClass = ''
  [kubernetes.kubernetesHpa]
    enable = false
    #name = ''
    #labels = ''
    #minReplicas = ''
    #maxReplicas = ''
    #cpuPrecentage = ''
  [kubernetes.kubernetesSecret]
    enable = false
    #name = ''
    #mountPath = ''
    #readOnly = ''
    #data = ''
  [kubernetes.kubernetesConfigMap]
    enable = false
    ballerinaConf = 'path/to/micro-gw.conf'
    #[[kubernetes.kubernetesConfigMap.configMaps]]
    #    name = ''
    #    mountPath = ''
    #    readOnly = false
    #    data = ['']
  [kubernetes.kubernetesPersistentVolumeClaim]
    enable = false
    #name = ''
    #mountPath = ''
    #readOnly = ''
    #accessMode = ''
    #volumeClaimSize = ''
  [kubernetes.kubernetesJob]
    enable = false
    #name = ''
    #labels = ''
    #restartPolicy = ''
    #backoffLimit = ''
    #activeDeadlineSeconds = ''
    #schedule = ''
    #imagePullPolicy = ''
    #image = ''
    #env = ''
    #buildImage = ''
    #dockerHost = ''
    #dockerCertPath = ''
    #push = ''
    #username = ''
    #password = ''
    #baseImage = ''
